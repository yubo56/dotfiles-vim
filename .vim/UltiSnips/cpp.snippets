extends cshared
snippet readfile "description"
std::vector<char> v;
if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
	char buf[1024];
	while (size_t len = fread(buf, 1, sizeof(buf), $2))
		v.insert(v.end(), buf, buf + len);
	fclose($2);
}${3}
endsnippet
snippet map "description"
std::map<${1:key}, ${2:value}> map${3};
endsnippet
snippet vector "description"
std::vector<${1:char}> v${2};
endsnippet
snippet ns "description"
namespace ${1:`!v expand('%:r')`} {
	${2}
} /* $1 */
endsnippet
snippet cl "description"
class ${1:`!v expand('%:r')`}
{
	private:
		${2:/* data */}

	public:
		$1 (${3:arguments});
		~$1 ();
};
endsnippet
snippet inc "description"
#include <${1:cstdio}>${2}
endsnippet
snippet Inc "description"
#include "${1:cstdio}"${2}
endsnippet
snippet FILE "open file" b
#include <cstdio>
int main(int argc, const char *argv[])
{
	FILE *fptr;
	const char *fn = "${1}";
	${2:int curr};

	fptr = fopen(fn, "r");
	fscanf(fptr, "${3:%d}", ${4:&curr});
	while (!feof(fptr))
	{
		fscanf(fptr, "$3", $4);
	}
	return 0;
}
endsnippet
